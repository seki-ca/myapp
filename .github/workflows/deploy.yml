# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ deploy/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  publish_aab:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy/googleplay'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Download dependencies
        if: steps.gradle-cache.outputs.cache-hit != 'true' # キャッシュが無い場合だけ実行
        run: ./gradlew androidDependencies --stacktrace
#      - name: Lint
#        run: ./gradlew ktlint
      - name: Publish AAB
        run: ./gradlew publishProdReleaseBundle
      - name: Upload AAB
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: myapp-prod.aab
          path: app/build/outputs/bundle/prodRelease/*prod*.aab
          if-no-files-found: error

  deploy_stg:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy/stg'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Download dependencies
        if: steps.gradle-cache.outputs.cache-hit != 'true' # キャッシュが無い場合だけ実行
        run: ./gradlew androidDependencies --stacktrace
      - name: Build APK
        run: ./gradlew assembleStgRelease --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: myapp-stg.apk
          path: app/build/outputs/apk/stg/release/*stg*.apk
          if-no-files-found: error

  deploy_prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy/prod'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Download dependencies
        if: steps.gradle-cache.outputs.cache-hit != 'true' # キャッシュが無い場合だけ実行
        run: ./gradlew androidDependencies --stacktrace
      - name: Build APK
        run: ./gradlew assembleProdRelease --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: myapp-prod.apk
          path: app/build/outputs/apk/prod/release/*prod*.apk
          if-no-files-found: error
